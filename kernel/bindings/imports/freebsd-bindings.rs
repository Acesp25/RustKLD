/* automatically generated by rust-bindgen 0.71.1 */

pub const modeventtype_MOD_LOAD: modeventtype = 0;
pub const modeventtype_MOD_UNLOAD: modeventtype = 1;
pub const modeventtype_MOD_SHUTDOWN: modeventtype = 2;
pub const modeventtype_MOD_QUIESCE: modeventtype = 3;
pub type modeventtype = libc::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct module {
    _unused: [u8; 0],
}
pub type module_t = *mut module;
pub type modeventhand_t = ::core::option::Option<
    unsafe extern "C" fn(arg1: module_t, arg2: libc::c_int, arg3: *mut libc::c_void) -> libc::c_int,
>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct moduledata {
    pub name: *const libc::c_char,
    pub evhand: modeventhand_t,
    pub priv_: *mut libc::c_void,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of moduledata"][::core::mem::size_of::<moduledata>() - 24usize];
    ["Alignment of moduledata"][::core::mem::align_of::<moduledata>() - 8usize];
    ["Offset of field: moduledata::name"][::core::mem::offset_of!(moduledata, name) - 0usize];
    ["Offset of field: moduledata::evhand"][::core::mem::offset_of!(moduledata, evhand) - 8usize];
    ["Offset of field: moduledata::priv_"][::core::mem::offset_of!(moduledata, priv_) - 16usize];
};
pub type moduledata_t = moduledata;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct linker_file {
    _unused: [u8; 0],
}
unsafe extern "C" {
    pub fn module_register(arg1: *const moduledata, arg2: *mut linker_file) -> libc::c_int;
}
unsafe extern "C" {
    pub fn uprintf(arg1: *const libc::c_char, ...) -> libc::c_int;
}
